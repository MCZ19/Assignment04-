---
title: "Data Science for Public Policy"
subtitle: "Assignment 04"
author: "Mitchell - mcz19 & Hannah Shepard-Moore - hms98"
execute:
  warning: false
format:
  html:
    embed-resources: true
---

The data used in this assignment comes from \_\_\_\_\_\_.

```{r}
library(tidyverse)
library(readxl)
county_data_2_ <- read_excel("data/county_data (2).xls", 
    sheet = "County")
View(county_data_2_)
```

Our data came in a "wide" format across years. So, we pivoted the variables of interest and merged them into a new dataset.

First, we created a subset of the data that only included data for Arizona and Virginia, two states of interest.

```{r}
az_va <- county_data_2_ %>%  
  filter(STATE_CD== "AZ" | STATE_CD== "VA") %>%  
  mutate(POP00 = case_when(POP00 == "X" ~ NA))%>%
  select(CONAME, STATE_CD, METRO, URBCODE, 
         starts_with("POP0"), starts_with("PRGNUM0"), starts_with("PRGBEN0"))
View(az_va)
```

The dataset did not have unique identifier for year and county, which we wanted to be our unit of analysis, so we created a unique variable for this within the "long" dataset for each variable of interest.

```{r}
#Population per year per county
pop_longer <- az_va %>% 
  select(CONAME, starts_with("POP0")) %>%
  pivot_longer(
    cols = starts_with("POP0"),
    names_to = "pop_year",
    values_to = "population",
    values_drop_na = TRUE) %>%
  mutate(year= case_when(pop_year == "POP01" ~ 2001,
                         pop_year == "POP02" ~ 2002,
                         pop_year == "POP03" ~ 2003,
                         pop_year == "POP04" ~ 2004,
                         pop_year == "POP05" ~ 2005,
                         pop_year == "POP06" ~ 2006,
                         pop_year == "POP07" ~ 2007,
                         pop_year == "POP08" ~ 2008,
                         pop_year == "POP09" ~ 2009,
                         pop_year == "POP10" ~ NA)) %>%
  mutate(CONAME = str_replace(CONAME,
                              " County, ",
                              ""),
         county_year = str_c(year,
                             CONAME,
                             sep= "_")) %>%
  select(county_year, population)
View(pop_longer)

#Population on SNAP per year per county
snap_longer <- az_va %>%
  select(CONAME, starts_with("PRGNUM")) %>%
  pivot_longer(
    cols = starts_with("PRGNUM"),
    names_to = "snap_pop_year",
    values_to = "snap_pop",
    values_drop_na = TRUE) %>%
  mutate(year= case_when(snap_pop_year == "PRGNUM00" ~ 2000,
                         snap_pop_year == "PRGNUM01" ~ 2001,
                         snap_pop_year == "PRGNUM02" ~ 2002,
                         snap_pop_year == "PRGNUM03" ~ 2003,
                         snap_pop_year == "PRGNUM04" ~ 2004,
                         snap_pop_year == "PRGNUM05" ~ 2005,
                         snap_pop_year == "PRGNUM06" ~ 2006,
                         snap_pop_year == "PRGNUM07" ~ 2007,
                         snap_pop_year == "PRGNUM08" ~ 2008,
                         snap_pop_year == "PRGNUM09" ~ 2009)) %>%
  mutate(CONAME = str_replace(CONAME,
                              " County, ",
                              ""),
         county_year = str_c(year,
                             CONAME,
                             sep= "_")) %>%
  select(county_year, snap_pop)
View(snap_longer)
#merge
snap_pop_longer <- merge(x= pop_longer,
                    y= snap_longer,
                    by= "county_year")
View(snap_pop_longer)
#SNAP Benefits per year per county
ben_longer <- az_va %>%
  select(CONAME, starts_with("PRGBEN")) %>%
  pivot_longer(
    cols = starts_with("PRGBEN"),
    names_to = "ben_year",
    values_to = "benefits",
    values_drop_na = TRUE) %>%
  mutate(year= case_when(ben_year == "PRGBEN00" ~ 2000,
                         ben_year == "PRGBEN01" ~ 2001,
                         ben_year == "PRGBEN02" ~ 2002,
                         ben_year == "PRGBEN03" ~ 2003,
                         ben_year == "PRGBEN04" ~ 2004,
                         ben_year == "PRGBEN05" ~ 2005,
                         ben_year == "PRGBEN06" ~ 2006,
                         ben_year == "PRGBEN07" ~ 2007,
                         ben_year == "PRGBEN08" ~ 2008,
                         ben_year == "PRGBEN09" ~ 2009))%>%
  mutate(CONAME = str_replace(CONAME,
                              " County, ",
                              ""),
         county_year = str_c(year,
                             CONAME,
                             sep= "_")) %>%
  select(county_year, benefits)
View(ben_longer)
```

Upon creating a "long" dataset for each variable of interest, we merged these into one longitudinal dataset. Since we had to make a unique identifier for county and year to merge the long datasets, we brought back the year, state, and county variables here.

```{r}
#merge all + add back data
all_longer <- inner_join(x= snap_pop_longer,
                         y= ben_longer,
                         by= "county_year")
#bring back year by taking out first 4 digits of county_year var
all_longer <- all_longer %>% 
  mutate(year= substr(county_year, 1, 4)) %>%
  mutate(state= str_sub(county_year, -2))%>%
  mutate(county= str_sub(county_year, 6, -3))
View(all_longer)
```

We were interested in how the population on SNAP changed over the years.

```{r}
#snap pop by county
all_longer %>%
  filter(state == "AZ") %>%
  ggplot(mapping= aes(x= county,
                       y= snap_pop)) +
           geom_bar(color = "blue3", fill="blue3" ,stat = "identity", width = .5) +
  scale_y_continuous(name = "SNAP Recipients", breaks = c(100000, 200000, 300000, 400000, 500000, 600000, 700000, 800000, 900000, 1000000, 2000000, 3000000)) +
  labs(title = "SNAP Population by County in Arizona",
       subtitle = "Total SNAP Recipients by County from 2001-2009",
       caption = "Data Source: USDA")
  theme_minimal()
```

```{r}
#snap use over time
all_longer %>%
  filter(state == "VA",
         snap_pop >= 0,
         population > 0) %>%
  mutate(snap_share= snap_pop / population) %>%
  ggplot(mapping= aes(x= year,
                      y= snap_share))+
  geom_point()
```
